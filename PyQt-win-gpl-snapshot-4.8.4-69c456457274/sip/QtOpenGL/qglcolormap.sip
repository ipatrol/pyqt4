// qglcolormap.sip generated by MetaSIP on Wed Apr 27 03:42:15 2011
//
// This file is part of the QtOpenGL Python extension module.
//
// Copyright (c) 2011 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QGLColormap
{
%TypeHeaderCode
#include <qglcolormap.h>
%End

public:
    QGLColormap();
    QGLColormap(const QGLColormap &);
    ~QGLColormap();
    void detach();
    bool isEmpty() const;
    int size() const;
    void setEntries(SIP_PYLIST colors /DocType="list-of-int"/, int base = 0);
%MethodCode
        // The Python implementation takes a list of numbers.
        QRgb *colours = new QRgb[PyList_GET_SIZE(a0)];
        
        for (SIP_SSIZE_T i = 0; i < PyList_GET_SIZE(a0); ++i)
            colours[i] = PyLong_AsUnsignedLong(PyList_GET_ITEM(a0, i));
        
        sipCpp->setEntries(PyList_GET_SIZE(a0), colours, a1);
        
        delete[] colours;
%End

    void setEntry(int idx, QRgb color);
    void setEntry(int idx, const QColor &color);
    QRgb entryRgb(int idx) const;
    QColor entryColor(int idx) const;
    int find(QRgb color) const;
    int findNearest(QRgb color) const;

protected:
    Qt::HANDLE handle();
    void setHandle(Qt::HANDLE ahandle);
};

// qprintpreviewwidget.sip generated by MetaSIP on Wed Apr 27 03:46:15 2011
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2011 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)
%If (PyQt_PrintPreviewWidget)

class QPrintPreviewWidget : QWidget
{
%TypeHeaderCode
#include <qprintpreviewwidget.h>
%End

public:
    enum ViewMode
    {
        SinglePageView,
        FacingPagesView,
        AllPagesView,
    };

    enum ZoomMode
    {
        CustomZoom,
        FitToWidth,
        FitInView,
    };

    QPrintPreviewWidget(QPrinter *printer, QWidget *parent /TransferThis/ = 0, Qt::WindowFlags flags = 0);
    QPrintPreviewWidget(QWidget *parent /TransferThis/ = 0, Qt::WindowFlags flags = 0);
    virtual ~QPrintPreviewWidget();
    qreal zoomFactor() const;
    QPrinter::Orientation orientation() const;
    QPrintPreviewWidget::ViewMode viewMode() const;
    QPrintPreviewWidget::ZoomMode zoomMode() const;
    int currentPage() const;
    int numPages() const;

public slots:
    virtual void setVisible(bool visible);
    void print() /PyName=print_/;
%If (Py_v3)
    void print();
%End
    void zoomIn(qreal factor = 1.1);
    void zoomOut(qreal factor = 1.1);
    void setZoomFactor(qreal zoomFactor);
    void setOrientation(QPrinter::Orientation orientation);
    void setViewMode(QPrintPreviewWidget::ViewMode viewMode);
    void setZoomMode(QPrintPreviewWidget::ZoomMode zoomMode);
    void setCurrentPage(int pageNumber);
    void fitToWidth();
    void fitInView();
    void setLandscapeOrientation();
    void setPortraitOrientation();
    void setSinglePageViewMode();
    void setFacingPagesViewMode();
    void setAllPagesViewMode();
    void updatePreview();

signals:
    void paintRequested(QPrinter *printer);
    void previewChanged();

public:
%If (Qt_4_6_0 -)
    int pageCount() const;
%End
};

%End
%End

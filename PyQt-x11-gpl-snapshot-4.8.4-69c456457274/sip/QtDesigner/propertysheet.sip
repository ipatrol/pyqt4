// propertysheet.sip generated by MetaSIP on Wed Apr 27 03:46:16 2011
//
// This file is part of the QtDesigner Python extension module.
//
// Copyright (c) 2011 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt.
// 
// This file may be used under the terms of the GNU General Public
// License versions 2.0 or 3.0 as published by the Free Software
// Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
// included in the packaging of this file.  Alternatively you may (at
// your option) use any later version of the GNU General Public
// License if such license has been publicly approved by Riverbank
// Computing Limited (or its successors, if any) and the KDE Free Qt
// Foundation. In addition, as a special exception, Riverbank gives you
// certain additional rights. These rights are described in the Riverbank
// GPL Exception version 1.1, which can be found in the file
// GPL_EXCEPTION.txt in this package.
// 
// Please review the following information to ensure GNU General
// Public Licensing requirements will be met:
// http://trolltech.com/products/qt/licenses/licensing/opensource/. If
// you are unsure which license is appropriate for your use, please
// review the following information:
// http://trolltech.com/products/qt/licenses/licensing/licensingoverview
// or contact the sales department at sales@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QDesignerPropertySheetExtension
{
%TypeHeaderCode
#include <propertysheet.h>
%End

public:
    virtual ~QDesignerPropertySheetExtension();
    virtual int count() const = 0 /__len__/;
    virtual int indexOf(const QString &name) const = 0;
    virtual QString propertyName(int index) const = 0;
    virtual QString propertyGroup(int index) const = 0;
    virtual void setPropertyGroup(int index, const QString &group) = 0;
    virtual bool hasReset(int index) const = 0;
    virtual bool reset(int index) = 0;
    virtual bool isVisible(int index) const = 0;
    virtual void setVisible(int index, bool b) = 0;
    virtual bool isAttribute(int index) const = 0;
    virtual void setAttribute(int index, bool b) = 0;
    virtual QVariant property(int index) const = 0;
    virtual void setProperty(int index, const QVariant &value) = 0;
    virtual bool isChanged(int index) const = 0;
    virtual void setChanged(int index, bool changed) = 0;
};
